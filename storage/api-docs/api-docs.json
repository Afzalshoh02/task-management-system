{
    "openapi": "3.0.0",
    "info": {
        "title": "Todo API",
        "description": "A simple Todo API built with Laravel",
        "version": "1.0.0"
    },
    "paths": {
        "/api/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get all tasks with filters",
                "operationId": "471d938a3bfaeb6fbd981d7c3e2728b0",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "todo",
                                "in_progress",
                                "done"
                            ]
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by type",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "task",
                                "story",
                                "bug"
                            ]
                        }
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "description": "Filter by priority",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "low",
                                "medium",
                                "high"
                            ]
                        }
                    },
                    {
                        "name": "assignee",
                        "in": "query",
                        "description": "Filter by assignee name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Filter by title (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Task"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create a new task",
                "operationId": "f803ebdb2300acdb7e93bbe8d0b9a2e8",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Title of the task",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Fix login bug"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status of the task",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "todo",
                                "in_progress",
                                "done"
                            ],
                            "example": "todo"
                        }
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "description": "Priority of the task",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "low",
                                "medium",
                                "high"
                            ],
                            "example": "high"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type of the task",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "task",
                                "story",
                                "bug"
                            ],
                            "example": "high"
                        }
                    },
                    {
                        "name": "assignee",
                        "in": "query",
                        "description": "Assignee name",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "John Doe"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Task created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tasks/{id}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get a specific task",
                "operationId": "90b3cd4d2d4b416dc989d2055dbed06c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update a task",
                "operationId": "1aaf37e74360ef4c10fadaee02ae77fb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Task title",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Fix login bug"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Task description",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Detailed bug description",
                            "nullable": true
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Task type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "task",
                                "story",
                                "bug"
                            ],
                            "example": "task"
                        }
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "description": "Task priority",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "low",
                                "medium",
                                "high"
                            ],
                            "example": "high"
                        }
                    },
                    {
                        "name": "assignee",
                        "in": "query",
                        "description": "Assigned person",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "John Doe"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Task status",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "todo",
                                "in_progress",
                                "done"
                            ],
                            "example": "todo"
                        }
                    },
                    {
                        "name": "due_date",
                        "in": "query",
                        "description": "Due date",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-04-15"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete a task",
                "operationId": "ad582480cd57c2a4e3b6a426943eeca5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Task deleted successfully"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            }
        },
        "/api/tasks/{id}/status": {
            "patch": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update task status",
                "operationId": "d67da4a89702cb87fd0b03e593801562",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "todo",
                                "in_progress",
                                "done"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "TaskRequest": {
                "required": [
                    "title",
                    "status",
                    "priority",
                    "type",
                    "assignee"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "Fix login bug"
                    },
                    "description": {
                        "type": "string",
                        "example": "Detailed bug description",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "task",
                            "story",
                            "bug"
                        ],
                        "example": "task"
                    },
                    "priority": {
                        "type": "string",
                        "enum": [
                            "low",
                            "medium",
                            "high"
                        ],
                        "example": "high"
                    },
                    "assignee": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "todo",
                            "in_progress",
                            "done"
                        ],
                        "example": "todo"
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-04-10",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Task": {
                "required": [
                    "id",
                    "title",
                    "status",
                    "priority"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Fix login bug"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "todo",
                            "in_progress",
                            "done"
                        ],
                        "example": "todo"
                    },
                    "priority": {
                        "type": "string",
                        "enum": [
                            "low",
                            "medium",
                            "high"
                        ],
                        "example": "high"
                    },
                    "assignee": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-04-01T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-04-01T12:30:00Z"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Tasks",
            "description": "Tasks"
        }
    ]
}